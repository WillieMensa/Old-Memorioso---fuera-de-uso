var Container = PIXI.Container, autoDetectRenderer = PIXI.autoDetectRenderer, Graphics = PIXI.Graphics, Sprite = PIXI.Sprite, AnimatedSprite = PIXI.extras.AnimatedSprite, TilingSprite = PIXI.extras.TilingSprite, loader = PIXI.loader, resources = PIXI.loader.resources, FILA_BOTONES = 50, LINEA_BOTONES = 470, RENDERER_W = 1000, RENDERER_H = 600, FONDO_JUEGO = 15531955, VERSION = "2.0.2", FONDO_AYUDA = 36095, FONT_NIVEL1 = "luckiest_guyregular";
FONT_NIVEL2 = "bangersregular";
FONT_NIVEL3 = "sriracharegular";
COLOR_BOTON = 13260;
DEBUG = !1;
var rendererOptions = {antialiasing:!1, transparent:!1, resolution:window.devicePixelRatio, autoResize:!0, backgroundColor:FONDO_JUEGO}, renderer = autoDetectRenderer(RENDERER_W, RENDERER_H, rendererOptions);
renderer.view.style.position = "absolute";
renderer.view.style.top = "0px";
renderer.view.style.left = "0px";
document.body.appendChild(renderer.view);
var state = Menu, myReq = void 0, BotonAtras = void 0, BotonAyuda = void 0, BotonJugar = void 0, BotonAcercaDe = void 0, BotonMenu = void 0, BotonDificilMas = void 0, BotonDificilMenos = void 0, Crono = void 0, start = void 0, elapsed = void 0, EscenaDeAyudas = void 0, EscenaDeJuego = void 0, EscenaAcercaDe = void 0, EscenaFinJuego = void 0, EscenaMenuInic = void 0, EscenarioGral = void 0, firstTile = null, secondTile = null, canPick = !0, nCol = void 0, nFil = void 0, nivJuego = 0, txtNivDif = void 0, 
tilesOnBoard = void 0, chosenTiles = void 0, estiloTxtBoton = new PIXI.TextStyle({fontFamily:FONT_NIVEL2, fontStyle:"italic", fontWeight:"bold", fill:["#ffffff", "#008800"], fontSize:24, padding:4, stroke:"#4a1850", strokeThickness:5, dropShadow:!0, dropShadowColor:"#000000", dropShadowBlur:4, dropShadowAngle:Math.PI / 6, dropShadowDistance:6}), aNivDif = [{niv:0, nCol:4, nFil:2}, {niv:1, nCol:4, nFil:3}, {niv:2, nCol:4, nFil:4}, {niv:3, nCol:5, nFil:4}, {niv:4, nCol:8, nFil:3}, {niv:5, nCol:7, nFil:4}, 
{niv:6, nCol:6, nFil:5}, {niv:7, nCol:8, nFil:4}, {niv:8, nCol:6, nFil:6}, {niv:9, nCol:8, nFil:5}, {niv:10, nCol:8, nFil:6}, {niv:11, nCol:9, nFil:6}], fonts_ready = !1, assets_ready = !1;
PIXI.loader.add("memorioso2.json").load(setup);
function setup() {
  DEBUG && console.log("window.innerWidth,innerHeigh: " + window.innerWidth + ", " + window.innerHeight);
  id = resources["memorioso2.json"].textures;
  EscenarioGral = new PIXI.Container;
  resize();
  window.addEventListener("resize", resize);
  EscenaMenuInic = new PIXI.Container;
  EscenarioGral.addChild(EscenaMenuInic);
  EscenaDeJuego = new PIXI.Container;
  EscenarioGral.addChild(EscenaDeJuego);
  EscenaFinJuego = new PIXI.Container;
  EscenarioGral.addChild(EscenaFinJuego);
  EscenaDeAyudas = new PIXI.Container;
  EscenarioGral.addChild(EscenaDeAyudas);
  EscenaAcercaDe = new PIXI.Container;
  EscenarioGral.addChild(EscenaAcercaDe);
  document.fonts.ready.then(function() {
  });
  HaceBotones();
  PantallaInicio();
  PantallaAyuda();
  PantallaJugar();
  PantallaAcercaDe();
  PantallaFinJuego();
  state = Menu;
  DEBUG && DibujaGrilla();
  resize();
  gameLoop();
}
function gameLoop() {
  myReq = requestAnimationFrame(gameLoop);
  state();
  renderer.render(EscenarioGral);
}
function resize() {
  var a = Math.min(window.innerWidth / RENDERER_W, window.innerHeight / RENDERER_H);
  EscenarioGral.scale.x = EscenarioGral.scale.y = a;
  renderer.resize(Math.ceil(RENDERER_W * a), Math.ceil(RENDERER_H * a));
}
function PantallaInicio() {
  EscenaMenuInic.visible = !0;
  var a = new PIXI.TextStyle({fill:10027212, fontFamily:FONT_NIVEL1, fontSize:96, fontWeight:"bold", padding:8, dropShadow:!0, dropShadowColor:"#111111", dropShadowBlur:4, dropShadowAngle:Math.PI / 6, dropShadowDistance:6}), c = new PIXI.Text("MEMORIOSO", a);
  c.x = 200 + (RENDERER_W - 200) / 2;
  c.y = 250;
  c.anchor.set(0.5);
  EscenaMenuInic.addChild(c);
  var d = 0;
  PIXI.ticker.shared.add(function() {
    d += 0.03;
    c.rotation = 0.2 * Math.cos(d);
  });
  EscenaMenuInic.addChild(BotonAcercaDe);
  BotonAcercaDe.visible = !0;
  SelectorDifi = haceSelectorDifi();
}
function HaceBotones() {
  var a = new PIXI.TextStyle({fill:COLOR_BOTON, fontFamily:FONT_NIVEL2, fontSize:40, fontWeight:"bold", padding:8});
  BotonJugar = new PIXI.Text("Jugar", a);
  BotonJugar.anchor.set(0.0);
  BotonJugar.x = FILA_BOTONES;
  BotonJugar.y = 100;
  BotonJugar.interactive = !0;
  BotonJugar.buttonMode = !0;
  BotonJugar.on("pointerdown", Jugar);
  BotonJugar.on("click", Jugar);
  BotonJugar.on("tap", Jugar);
  BotonAcercaDe = new PIXI.Text("Acerca de", a);
  BotonAcercaDe.anchor.set(0.0);
  BotonAcercaDe.x = FILA_BOTONES;
  BotonAcercaDe.y = 300;
  BotonAcercaDe.interactive = !0;
  BotonAcercaDe.buttonMode = !0;
  BotonAcercaDe.on("pointerdown", AcercaDe);
  BotonAcercaDe.on("click", AcercaDe);
  BotonAcercaDe.on("tap", AcercaDe);
  BotonAyuda = new PIXI.Text("Ayuda", a);
  BotonAyuda.anchor.set(0.0);
  BotonAyuda.x = FILA_BOTONES;
  BotonAyuda.y = 375;
  BotonAyuda.interactive = !0;
  BotonAyuda.buttonMode = !0;
  BotonAyuda.on("pointerdown", Ayuda);
  BotonAyuda.on("click", Ayuda);
  BotonAyuda.on("tap", Ayuda);
  BotonAtras = new PIXI.Text("Volver", a);
  BotonAtras.anchor.set(0.0);
  BotonAtras.x = FILA_BOTONES;
  BotonAtras.y = 450;
  BotonAtras.interactive = !0;
  BotonAtras.buttonMode = !0;
  BotonAtras.on("pointerdown", Menu);
  BotonAtras.on("click", Menu);
  BotonAtras.on("tap", Menu);
  BotonMenu = new PIXI.Text("Volver", a);
  BotonMenu.anchor.set(0.0);
  BotonMenu.x = FILA_BOTONES;
  BotonMenu.y = 450;
  BotonMenu.interactive = !0;
  BotonMenu.buttonMode = !0;
  BotonMenu.on("pointerdown", Menu);
  BotonMenu.on("click", Menu);
  BotonMenu.on("tap", Menu);
}
function PantallaAyuda() {
  var a = new PIXI.Graphics;
  a.lineStyle(4, 3351057, 0.95);
  a.beginFill(FONDO_AYUDA, 0.95);
  a.drawRoundedRect(40, 40, RENDERER_W - 200, RENDERER_H - 200);
  a.endFill();
  EscenaDeAyudas.addChild(a);
  a = new PIXI.TextStyle({fill:"#ffffff", fontFamily:FONT_NIVEL3, fontSize:24, fontStyle:"normal", fontWeight:"400"});
  a = new PIXI.Text("Que es?\nMEMORIOSO es un juego de concentracion y memoria.\nEn que consiste?\nHay un cojunto de fichas o cartas, cada una con una imagen, \ncolocadas de forma tal que no se ve su anverso.\nHay dos fichas de cada imagen. El juego consiste en encontrar\nlas parejas de imagenes iguales.\nAl pulsar sobre una imagen, esta se da vuelta.\nSe eligen dos fichas consecutivas. Si resultan ser iguales se\nretiran del tablero. Si son diferentes vuelven a la posicion\noriginal.\nEl juego finaliza cuando se han encontrado todas las parejas.", 
  a);
  a.x = 60;
  a.y = 60;
  EscenaDeAyudas.addChild(a);
  EscenaDeAyudas.visible = !0;
}
function Menu() {
  EscenaDeAyudas.visible = !1;
  EscenaDeJuego.visible = !1;
  EscenaAcercaDe.visible = !1;
  EscenaFinJuego.visible = !1;
  EscenaMenuInic.visible = !0;
  EscenarioGral.visible = !0;
  EscenaMenuInic.addChild(BotonAyuda);
  BotonAyuda.visible = !0;
  BotonAyuda.alpha = 1;
  EscenaMenuInic.addChild(BotonAcercaDe);
  BotonAcercaDe.visible = !0;
  EscenaMenuInic.addChild(BotonJugar);
  BotonJugar.visible = !0;
  BotonJugar.alpha = 1;
  txtNivDif.text = nivJuego;
  state = Menu;
}
function AcercaDe() {
  EscenaDeAyudas.visible = !1;
  EscenaDeJuego.visible = !1;
  EscenaAcercaDe.visible = !0;
  EscenaFinJuego.visible = !1;
  EscenaMenuInic.visible = !1;
  EscenarioGral.visible = !0;
  EscenaAcercaDe.addChild(BotonMenu);
  BotonMenu.visible = !0;
  state = AcercaDe;
}
function Ayuda() {
  EscenaDeAyudas.visible = !0;
  EscenaDeJuego.visible = !1;
  EscenaAcercaDe.visible = !1;
  EscenaFinJuego.visible = !1;
  EscenaMenuInic.visible = !1;
  EscenarioGral.visible = !0;
  EscenaDeAyudas.addChild(BotonAtras);
  BotonAtras.visible = !0;
  state = Ayuda;
}
function DibujaGrilla() {
  var a = new PIXI.TextStyle({fontFamily:FONT_NIVEL3, fontSize:10}), c = 50, d = 50, b = new PIXI.Graphics;
  for (b.lineStyle(1, "#bbbbbbb", 0.5); d <= RENDERER_H;) {
    b.moveTo(0, d);
    b.lineTo(RENDERER_W + 200, d);
    EscenarioGral.addChild(b);
    var e = new PIXI.Text(d, a);
    e.x = 25;
    e.y = d;
    EscenarioGral.addChild(e);
    d += 50;
  }
  for (; c <= RENDERER_W;) {
    b.moveTo(c, 0), b.lineTo(c, RENDERER_H + 200), EscenarioGral.addChild(b), e = new PIXI.Text(c, a), e.x = c, e.y = 50, EscenarioGral.addChild(e), c += 50;
  }
}
function end() {
  DEBUG && console.log("=== function end ===");
  EscenaDeAyudas.visible = !1;
  EscenaDeJuego.visible = !0;
  EscenaAcercaDe.visible = !1;
  EscenaFinJuego.visible = !0;
  EscenaMenuInic.visible = !1;
  EscenarioGral.visible = !0;
  EscenaDeJuego.alpha = 0.8;
  EscenaFinJuego.addChild(BotonJugar);
  BotonJugar.visible = !0;
  BotonJugar.alpha = 1;
  EscenaFinJuego.addChild(BotonMenu);
  state = end;
}
function PantallaAcercaDe() {
  var a = new PIXI.Graphics;
  a.lineStyle(4, 3351057, 0.95);
  a.beginFill(FONDO_AYUDA, 0.95);
  a.drawRoundedRect(40, 40, RENDERER_W - 200, RENDERER_H - 200);
  a.endFill();
  EscenaAcercaDe.addChild(a);
  a = new PIXI.TextStyle({fill:"white", fontStyle:"normal", fontFamily:FONT_NIVEL3, fontSize:32, fontWeight:"bold"});
  a = new PIXI.Text("Acerca de MEMORIOSO version " + VERSION + "\nEs un juego para ejercitar concentracion \ny memoria desarrollado por \nWillie Verger Juegos de Ingenio\n\nSoporte: info@ingverger.com.ar\nWeb: ingverger.com.ar\n\n", a);
  a.x = 60;
  a.y = 60;
  EscenaAcercaDe.addChild(a);
  EscenaAcercaDe.visible = !0;
  BotonAyuda.visible = !1;
  BotonAcercaDe.visible = !1;
  EscenaAcercaDe.addChild(BotonMenu);
  BotonMenu.visible = !0;
}
function haceSelectorDifi() {
  var a = FILA_BOTONES, c = new PIXI.TextStyle({fill:COLOR_BOTON, fontFamily:FONT_NIVEL2, fontSize:64, fontWeight:"bold", padding:12});
  styleS = new PIXI.TextStyle({fill:COLOR_BOTON, fontFamily:FONT_NIVEL2, fontSize:28, fontWeight:"normal", padding:4});
  var d = new PIXI.Graphics;
  d.beginFill(10053375, 0.3);
  d.drawRoundedRect(a, 160, 200, 100, 10);
  d.endFill();
  EscenaMenuInic.addChild(d);
  BotonDificilMas = new PIXI.Text("+", c);
  BotonDificilMas.x = a + 160;
  BotonDificilMas.y = 160 + 0.56 * 100;
  BotonDificilMas.anchor.set(0.5);
  BotonDificilMas.interactive = !0;
  BotonDificilMas.buttonMode = !0;
  BotonDificilMas.on("pointerdown", MasDificil);
  EscenaMenuInic.addChild(BotonDificilMas);
  BotonDificilMenos = new PIXI.Text("-", c);
  BotonDificilMenos.x = a + 40;
  BotonDificilMenos.y = 160 + 0.56 * 100;
  BotonDificilMenos.anchor.set(0.5);
  BotonDificilMenos.interactive = !0;
  BotonDificilMenos.buttonMode = !0;
  BotonDificilMenos.on("pointerdown", MenosDificil);
  EscenaMenuInic.addChild(BotonDificilMenos);
  txtNivDif = new PIXI.Text("8", c);
  txtNivDif.x = a + 100;
  txtNivDif.y = 160 + 0.56 * 100;
  txtNivDif.anchor.set(0.5);
  c = new PIXI.Text("Dificultad", styleS);
  c.x = a + 100;
  c.y = 176;
  c.anchor.set(0.5);
  EscenaMenuInic.addChild(txtNivDif);
  EscenaMenuInic.addChild(c);
}
function MasDificil() {
  nivJuego < aNivDif.length - 1 && nivJuego++;
  DEBUG && console.log("nivJuego: " + nivJuego);
}
function MenosDificil() {
  0 < nivJuego && nivJuego--;
  DEBUG && console.log("nivJuego: " + nivJuego);
}
function PantallaJugar() {
  Crono = new PIXI.Text("Tiempo: ", {fontFamily:FONT_NIVEL3, fontSize:"16px", fill:"#a00"});
  Crono.position.set(400, 10);
  EscenaDeJuego.addChild(Crono);
}
function play() {
  DEBUG && console.log("*** function play - chosenTiles.length: " + chosenTiles.length);
  0 == chosenTiles.length ? (DEBUG && console.log("chosenTiles.length == 0 "), EscenaFinJuego.visible = !0, EscenaDeJuego.visible = !1, EscenaDeJuego.alpha = 0.8, BotonJugar.visible = !0, BotonMenu.visible = !0, state = end) : elapsed = Math.floor(((new Date).getTime() - start) / 100) / 10;
  Crono.text = "Tiempo: " + elapsed + " seg.";
}
function PantallaFinJuego() {
  var a = new PIXI.TextStyle({fill:"#880000", fontFamily:FONT_NIVEL2, fontSize:48, fontWeight:"bold"});
  a = new PIXI.Text("Bien resuelto!\nFelicitaciones!", a);
  a.x = (RENDERER_W - a.width) / 2;
  a.y = (RENDERER_H - a.height) / 2;
  EscenaFinJuego.addChild(a);
  EscenaFinJuego.addChild(BotonJugar);
  EscenaFinJuego.addChild(BotonMenu);
}
function Dificultad() {
  EscenaDeAyudas.visible = !1;
  EscenaDeJuego.visible = !1;
  EscenaAcercaDe.visible = !1;
  EscenaFinJuego.visible = !1;
  EscenaMenuInic.visible = !1;
  EscenaDificultad.visible = !0;
  EscenaDificultad.addChild(BotonMenu);
  EscenaDificultad.addChild(BotonAtras);
  BotonMenu.visible = !0;
  state = Dificultad;
}
function onTilesLoaded() {
  chosenTiles = [];
  var a = "img-100.png img-101.png img-102.png img-103.png img-104.png img-105.png img-106.png img-107.png img-108.png img-109.png img-110.png img-111.png img-112.png img-113.png img-114.png img-115.png img-116.png img-117.png img-118.png img-119.png img-120.png img-121.png img-122.png img-123.png img-124.png img-125.png img-126.png img-127.png img-128.png img-129.png img-130.png img-131.png img-132.png img-133.png img-134.png img-135.png img-136.png img-137.png img-138.png img-139.png img-140.png img-141.png img-142.png img-143.png img-144.png img-145.png img-146.png img-147.png".split(" "), 
  c = (RENDERER_W - 90 * nCol) / 2, d = (RENDERER_H - 90 * nFil) / 2;
  DEBUG && console.log("nCol, nFil: " + nCol + ", " + nFil);
  for (DEBUG && console.log("offset_X, offset_Y: " + c + ", " + d); chosenTiles.length < nFil * nCol;) {
    var b = Math.floor(48 * Math.random());
    -1 == chosenTiles.indexOf(b) && chosenTiles.push(b, b);
  }
  for (i = 0; 96 > i; i++) {
    b = Math.floor(Math.random() * nFil * nCol);
    var e = Math.floor(Math.random() * nFil * nCol), f = chosenTiles[b];
    chosenTiles[b] = chosenTiles[e];
    chosenTiles[e] = f;
  }
  for (i = 0; i < nCol; i++) {
    for (j = 0; j < nFil; j++) {
      b = new PIXI.Sprite(id[a[chosenTiles[i * nFil + j]]]), b.buttonMode = !0, b.interactive = !0, b.scale.set(0.3), b.isSelected = !1, b.theVal = chosenTiles[i * nFil + j], b.position.x = c + 90 * i, b.position.y = d + 90 * j, b.tint = 0, b.alpha = 0.7, EscenarioGral.addChild(b), b.mousedown = b.touchstart = function(a) {
        canPick && !this.isSelected && (this.isSelected = !0, this.tint = 16777215, this.alpha = 1, null == firstTile ? firstTile = this : (secondTile = this, canPick = !1, firstTile.theVal == secondTile.theVal ? (a = chosenTiles.indexOf(firstTile.theVal), chosenTiles.splice(a, 1), a = chosenTiles.indexOf(secondTile.theVal), chosenTiles.splice(a, 1), setTimeout(function() {
          EscenarioGral.removeChild(firstTile);
          EscenarioGral.removeChild(secondTile);
          secondTile = firstTile = null;
          canPick = !0;
        }, 1000)) : setTimeout(function() {
          firstTile.isSelected = !1;
          secondTile.isSelected = !1;
          firstTile.tint = 0;
          secondTile.tint = 0;
          firstTile.alpha = 0.7;
          secondTile.alpha = 0.7;
          secondTile = firstTile = null;
          canPick = !0;
        }, 1000)));
      };
    }
  }
}
function Jugar() {
  DEBUG && console.log("=== function Jugar ===");
  EscenaDeAyudas.visible = !1;
  EscenaDeJuego.visible = !0;
  EscenaAcercaDe.visible = !1;
  EscenaFinJuego.visible = !1;
  EscenaMenuInic.visible = !1;
  EscenaDeJuego.alpha = 0.99;
  DEBUG && console.log("juego con nivel " + nivJuego);
  nFil = aNivDif[nivJuego].nFil;
  nCol = aNivDif[nivJuego].nCol;
  onTilesLoaded();
  start = (new Date).getTime();
  elapsed = 0;
  state = play;
}
function GenJuego() {
}
;